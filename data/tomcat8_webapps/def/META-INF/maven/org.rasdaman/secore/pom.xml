<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <name>SECORE - CRS Resolver</name>
    <packaging>war</packaging>
    <groupId>org.rasdaman</groupId>
    <artifactId>secore</artifactId>
    <version>1.0.0</version>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>

        <!-- to disable error when generating javadoc for java 1.8 -->
        <additionalparam>-Xdoclint:none</additionalparam>
 
        <sourceDir>${project.basedir}</sourceDir>
        <buildDir>/opt/rasdaman/source/build/applications/secore/</buildDir>
    </properties>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.2.RELEASE</version>
    </parent>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <!-- don't use logback as default logger -->
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
                <exclusion>
                    <!-- don't use Tomcat embedded from Spring Boot which makes Ubuntu, Debian Tomcat 7 could not start -->
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j</artifactId>
            <version>1.2.5.RELEASE</version>
        </dependency>
        <!-- for log4j.rolling.TimeBasedRollingPolicy in petascope.properties -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>apache-log4j-extras</artifactId>
            <version>1.2.17</version>
        </dependency>
        <dependency>
            <groupId>org.basex</groupId>
            <artifactId>basex</artifactId>
            <version>8.6.7</version>
        </dependency>
        <dependency>
            <groupId>xmlunit</groupId>
            <artifactId>xmlunit</artifactId>
            <version>1.3</version>
        </dependency>
        <dependency>
            <groupId>be.cyberelf.nanoxml</groupId>
            <artifactId>nanoxml</artifactId>
            <version>2.2.3</version>
        </dependency>
        <dependency>
            <groupId>org.jvnet.ogc</groupId>
            <artifactId>ows-v_1_0_0-schema</artifactId>
            <version>1.0.3</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jdt.core.compiler</groupId>
            <artifactId>ecj</artifactId>
            <version>4.6.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>
        <!-- use Tomcat embedded from embed-jasper instead of Spring Boot -->
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.rauschig</groupId>
            <artifactId>jarchivelib</artifactId>
            <version>0.7.1</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.7</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    <build>
        <finalName>def</finalName>
        <!-- The built package should be in build directory, not in source directory -->
        <directory>${buildDir}/target</directory>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.6</version>
                <executions>
                    <execution>
                        <id>prepare</id>
                        <phase>validate</phase>
                        <configuration>
                            <tasks>
                                <!-- Use this bash script to untar gml.tar.gz file if necessary -->
                                <exec executable="/bin/bash">
                                    <arg value="${sourceDir}/untar_gml_file.sh" />
                                    <arg value="${sourceDir}/src/main/resources/gml.tar.gz" />
                                    <arg value="${buildDir}/src/main/resources/gml.tar.gz" />
                                </exec>
                                <!-- Copy all files in src/main/resources and jsp files manually -->
                                <copy todir="${buildDir}/target/def/WEB-INF/jsp/">
                                    <fileset dir="${sourceDir}/src/main/webapp/WEB-INF/jsp/" includes="**/*" />
                                </copy>
                                <copy todir="${buildDir}/target/def/WEB-INF/classes/">
                                    <fileset dir="${buildDir}/src/main/resources/" includes="**/*" />
                                </copy>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
